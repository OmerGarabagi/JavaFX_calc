; 322471145, 50%
; 318678620, 50%
.ORIG X40C8
Exp:
	ST R0, R0_SAVE_EXP				; BACKUP REGISTERS
	ST R1, R1_SAVE_EXP
	ST R3, R3_SAVE_EXP 
	ST R4, R4_SAVE_EXP
	ST R5, R5_SAVE_EXP
	ST R6, R6_SAVE_EXP
	ST R7, R7_SAVE_EXP
	
	LD R6, Mul_PTR					; LOAD MUL SUB POINTER ON R6
	AND R3,R3,#0					; INITIALIZE R2 & R3 TO ZERO
	AND R2,R2,#0
	ADD R0,R0,#0
	BRn ILLEGAL_INPUT				; CHECK FOR ILLEGAL INPUT
	ADD R1,R1,#0
	BRn ILLEGAL_INPUT				; CHECK FOR ILLEGAL INPUT
	ADD R0,R0,#0
	BRz ILLEGAL_INPUT_CHECK			; CHECK FOR A SPECIAL CASE OF ILLEGAL INPUT
	CONTINUE_AFTER_CHECK:			; BOTH REGISTERS ARE LEGAL, CONTINUE CALCULATION
		ADD R1,R1,#0
		BRz CASE_R1_IS_0			; CHECK CASE IF R1=0
		ADD R3,R1,#0				; R3 IS NOW THE EXPONENTIAL COUNTER
		ADD R1,R0,#0				; R1=R0 FOR THE CALL OF MUL
		ST R0,R0_SAVE_EXP			; SAVE ORIGINAL VALUE OF R0
		CONTINUE_EXP:				; START OF CALCULATION LOOP
			JSRR R6					; GO TO MUL
			ADD R0,R2,#0			; ENTER THE RESULT OF MUL INTO R0
			LD R1,R0_SAVE_EXP		; R1 = ORIGINAL R0 VALUE
			ADD R3,R3,#-1			; LOWER THE EXPONENTIAL COUNTER (AFTER EACH MUL CALCULATION)
			AND R4,R4,#0			
			ADD R4,R3,#-1			; CHECK IF COUNTER(R3)=1
			BRp CONTINUE_EXP		; IF R3!=1 DO THE CALCULATION LOOP AGAIN
			BR END_EXP				; IF R3=1 THEN END CALCULATION LOOP

	CASE_R1_IS_0:					; CASE R1=0
		ADD R2,R2,#1				; RESULT IS 1
		BR END_EXP					; END CALCULATION

	ILLEGAL_INPUT_CHECK:			; SPECIAL CASE OF ILLEGAL INPUT (R0=0 & R1<=0)
		ADD R1,R1,#0
		BRnz ILLEGAL_INPUT			; IF R1<=0 THEN GO TO ILLEGAL_INPUT
		BR CONTINUE_AFTER_CHECK		; IF R1 IS POSITIVE THEN START CALCULATION

	ILLEGAL_INPUT:					; CASE ILLEGAL INPUT
		ADD R2,R2,#-1				; RESULT IS -1
		BR END_EXP					; END PROGRAM

	END_EXP:						
		LD R0, R0_SAVE_EXP			; RESTORE REGISTERS BACKUPS
		LD R1, R1_SAVE_EXP
		LD R3, R3_SAVE_EXP 
		LD R4, R4_SAVE_EXP
		LD R5, R5_SAVE_EXP
		LD R6, R6_SAVE_EXP
		LD R7, R7_SAVE_EXP
RET
HALT
	
	Mul_PTR .fill x4000				; MUL POINTER LABEL
	R0_SAVE_EXP .fill #0			; REGISTERS BACKUP LABELS
	R1_SAVE_EXP .fill #0
	R2_SAVE_EXP .fill #0
	R3_SAVE_EXP .fill #0
	R4_SAVE_EXP .fill #0
	R5_SAVE_EXP .fill #0
	R6_SAVE_EXP .fill #0
	R7_SAVE_EXP .fill #0

.END