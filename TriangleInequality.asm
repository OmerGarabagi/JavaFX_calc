; 322471145, 50%
; 318678620, 50%
.ORIG X4190
TriangleInequality:
	ST R0, R0_SAVE_TRIANGLEINEQUALITY				; BACKUP REGISTERS
	ST R1, R1_SAVE_TRIANGLEINEQUALITY
	ST R2, R2_SAVE_TRIANGLEINEQUALITY
	ST R3, R3_SAVE_TRIANGLEINEQUALITY
	ST R4, R4_SAVE_TRIANGLEINEQUALITY
	ST R5, R5_SAVE_TRIANGLEINEQUALITY
	ST R6, R6_SAVE_TRIANGLEINEQUALITY
	ST R7, R7_SAVE_TRIANGLEINEQUALITY
	
	AND R3,R3,#0									; INITIALIZE R3,R4,R5,R6,R7 TO 0
	AND R4,R4,#0
	AND R5,R5,#0
	AND R6,R6,#0
	AND R7,R7,#0
	ADD R0,R0,#0
	BRn ILLEGAL_VALUE								; ILLEGAL INPUT CHECK
	ADD R1,R1,#0
	BRn ILLEGAL_VALUE								; ILLEGAL INPUT CHECK
	ADD R2,R2,#0
	BRn ILLEGAL_VALUE								; ILLEGAL INPUT CHECK
	FIRST_CONDITION:								; FIRST CONDITION CHECK (ALL 3 CONDITIONS MUST BE TRUE FOR THE TRIANGLE ENEQUALITY)
		ADD R4,R0,R1
		NOT R2,R2
		ADD R2,R2,#1
		ADD R4,R4,R2								; ?R2<=R0+R1?
		BRn NOT_TRUE								; IF NOT THEN CONDITION NOT MET AND GO TO NOT_TRUE
		LD R2,R2_SAVE_TRIANGLEINEQUALITY			; LOAD R2 BACKUP
		SECOND_CONDITION:							; SECOND CONDITION CHECK
			AND R4,R4,#0							; INITIALIZE R4 TO 0
			ADD R4,R1,R2
			NOT R0,R0
			ADD R0,R0,#1
			ADD R4,R4,R0							; ?R0<=R1+R2?
			BRn NOT_TRUE							; IF NOT THEN CONDITION NOT MET AND GO TO NOT_TRUE
			LD R0,R0_SAVE_TRIANGLEINEQUALITY		; LOAD R0 BACKUP
			THIRD_CONDITION:						; THIRD (LAST) CONDITION
				AND R4,R4,#0						; INITIALIZE R4 TO 0
				ADD R4,R2,R0
				NOT R1,R1
				ADD R1,R1,#1
				ADD R4,R4,R1						; ?R1<=R0+R2?
				BRn NOT_TRUE						; IF NOT THEN CONDITION NOT MET AND GO TO NOT_TRUE
				LD R1,R1_SAVE_TRIANGLEINEQUALITY	; LOAD R1 BACKUP
	ALL_CONDITIONS_TRUE:							; CASE ALL 3 CONDITIONS WERE TRUE
		ADD R3,R3,#1								; TRIANGLE INEQUALITY EXISTS SO R3=1
		BR END_PROG									; END PROGRAM

NOT_TRUE:											; CASE CONDITIONS ARE NOT MET
	AND R3,R3,#0									; TRIANGLE INEQUALITY DOESNT EXIST SO R3=0
	BR END_PROG										; END PROGRAM

ILLEGAL_VALUE:										; CASE ILLEGAL VALUE
	ADD R3,R3,#-1									; R3=-1
	BR END_PROG										; END PROGRAM

END_PROG:	
LD R0, R0_SAVE_TRIANGLEINEQUALITY					; RESTORE REGISTERS BACKUPS
LD R1, R1_SAVE_TRIANGLEINEQUALITY
LD R2, R2_SAVE_TRIANGLEINEQUALITY
LD R4, R4_SAVE_TRIANGLEINEQUALITY
LD R5, R5_SAVE_TRIANGLEINEQUALITY
LD R6, R6_SAVE_TRIANGLEINEQUALITY
LD R7, R7_SAVE_TRIANGLEINEQUALITY

RET
HALT

R0_SAVE_TRIANGLEINEQUALITY .fill #0					; REGISTERS BACKUP LABELS
R1_SAVE_TRIANGLEINEQUALITY .fill #0
R2_SAVE_TRIANGLEINEQUALITY .fill #0
R3_SAVE_TRIANGLEINEQUALITY .fill #0
R4_SAVE_TRIANGLEINEQUALITY .fill #0
R5_SAVE_TRIANGLEINEQUALITY .fill #0
R6_SAVE_TRIANGLEINEQUALITY .fill #0
R7_SAVE_TRIANGLEINEQUALITY .fill #0
	

.END