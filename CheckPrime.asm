; 322471145, 50%
; 318678620, 50%
.ORIG X412C
CheckPrime:	
	ST R0,R0_SAVE_CHECK_PRIME			; BACKUP REGISTERS
	ST R2,R2_SAVE_CHECK_PRIME
	ST R1,R1_SAVE_CHECK_PRIME
	ST R3,R3_SAVE_CHECK_PRIME
	ST R4,R4_SAVE_CHECK_PRIME
	ST R5,R5_SAVE_CHECK_PRIME
	ST R6,R6_SAVE_CHECK_PRIME 
	ST R7,R7_SAVE_CHECK_PRIME
	
	LD R6,DIV_PTR						; LOAD DIV POINTER ON R6
	AND R2,R2,#0						; INITIALIZE R2,R3,R4
	AND R3,R3,#0
	AND R4,R4,#0
	ADD R0,R0,#-1						
	BRnz END_PROG						; CHECK FOR ILLEGAL R0 VALUE, IF TRUE END PROGRAM
	LD R1,R0_SAVE_CHECK_PRIME			; LOAD ORIGINAL R0 VALUE INTO R1, R1 IS NOW THE DEVIDER FROM R0 VALUE UNTIL 1
	CONTINUE_CHECK:						; START OF CHECK PRIME LOOP
		LD R0,R0_SAVE_CHECK_PRIME		; LOAD ORIGINAL R0 VALUE INTO R0
		ST R1,R1_SUBSAVE				; STORE R1 VALUE ONTO A SUB SAVER
		JSRR R6							; CALL FOR DIV
		ADD R3,R3,#0					
		BRz COUNT_ADD					; IF THE REMAINDER IS 0 THEN ADD 1 TO THE COUNTER (R4)
		CONTINUE:						; CONTINUE CALCULATION
			LD R1,R1_SUBSAVE			; RESTORE R1 PREVIOUS VALUE 
			ADD R1,R1,#-1				; R1--
			BRz END_CHECK				; IF R1=0 THEN END CALCULATION
			BR CONTINUE_CHECK			; ELSE DO LOOP AGAIN

	COUNT_ADD:							; CASE REMAINDER IS 0 COUNTER
		ADD R4,R4,#1					; COUNTER(R4)++
		AND R3,R3,#0					; INITIALIZE R3 TO 0
		BR CONTINUE						; GO BACK TO THE LINE AFTER THE COUND_ADD CALL

	END_CHECK:							; END CHECK
		ADD R4,R4,#-2					
		BRz IS_PRIME					; IF THE AMOUNT OF TIMES THAT THE REMAINDER WAS 0 IS EQUAL 2 (R4=2)	THEN THE NUMBER (R0) IS PRIME
		AND R2,R2,#0					; ELSE THE NUMBER IS NOT PRIME, R2=0
		BR END_PROG						; END PROGRAM

	IS_PRIME:							; CASE R0 IS PRIME
		AND R2,R2,#0					
		ADD R2,R2,#1					; INITIALIZE R2 TO BE 0, ADD 1 TO R2, R2=1
		BR END_PROG						; END PROGRAM

	END_PROG:
		LD R0,R0_SAVE_CHECK_PRIME		; RESTORE REGISTERS BACKUPS
		LD R1,R1_SAVE_CHECK_PRIME
		LD R3,R3_SAVE_CHECK_PRIME
		LD R4,R4_SAVE_CHECK_PRIME
		LD R5,R5_SAVE_CHECK_PRIME
		LD R6,R6_SAVE_CHECK_PRIME
		LD R7,R7_SAVE_CHECK_PRIME
RET
HALT

	DIV_PTR .fill x4064					; DIV POINTER LABEL
	R1_SUBSAVE .fill #0					; R1 SUB SAVER
	R0_SAVE_CHECK_PRIME .fill #0		; REGISTERS BACKUP LABELS
	R1_SAVE_CHECK_PRIME .fill #0
	R2_SAVE_CHECK_PRIME .fill #0
	R3_SAVE_CHECK_PRIME .fill #0
	R4_SAVE_CHECK_PRIME .fill #0
	R5_SAVE_CHECK_PRIME .fill #0
	R6_SAVE_CHECK_PRIME .fill #0
	R7_SAVE_CHECK_PRIME .fill #0

.END